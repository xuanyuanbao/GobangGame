1)目前主要使用的设计模式有：
    1、单例模式:
        单例模式体现在棋子白棋和黑棋类中，整个棋盘上只需要两个棋子就行，棋盘上实际上使用chessMap数组来保存棋子的位置，
        chessMap[i][j]==1，这条语句代表第i行，第j列的棋子为白色；chessMap[i][j]==2这条语句代表第i行，第j列的棋子为黑色
        调用这两颗棋子对象主要是为了调用对象的draw方法，将棋子绘画在棋盘上

    2、工厂方法模式：
        所有的棋子均由工厂棋子工厂factory调用得到，实际就是调用getChess方法，传入坐标和颜色，得到一个棋子

    3、抽象工厂模式：
        在棋盘上有两个主题，一个是简化主题，一个是个性主题，

    4、备忘录模式：
        用来帮助玩家悔棋；或者玩家不想悔棋了，只想前进。在本次备忘录方法模式中，作者提供两个方式：悔棋和前进

    5、责任链模式：
        如果悔棋少于3次，系统可以判断玩家自动悔棋，如果是超过3次，则需要对手来判断是否同意悔棋

    6、状态模式：
        如果可以的话，我们可以将人机对战模式、人人对战模式，变成棋盘的两种状态，玩家只需要在界面上点击切换即可


2)想法idea：
    1、其实两个监听器里面的两个方法的代码有点多，需要将其封装之后才能显得出来面向对象设计

    2、

3)目前主要还有两个功能没有实现：
    1、保存游戏，并能够读取游戏数据
    2、开始游戏按钮，需要重新做一个界面
    3、没有实现认输
    4、在界面上显示轮到某一方下棋
